HTTP (REST) API
===============

Обзор API
---------
Предоставляемый API Сервиса отправки SMS сообщений позволяет осуществить:

* Аутентификацию
* Отправку SMS-сообщения на один номер без учета часового пояса получателя
* Отправку SMS-сообщения на один номер с учетом часового пояса получателя
* Отправку SMS-сообщения на несколько номеров без учета часового пояса получателя
* Получение статуса отправленного SMS-сообщения
* Получение SMS-сообщений за период
* Получение статистики по SMS-рассылкам
* Получение баланса авторизованного Пользователя

API Сервиса отправки SMS сообщений организовано в соответствии с принципами REST, что позволяет обмениваться HTTPS URL–encoded запросами. HTTPS - это обычный HTTP, работающий через шифрованные транспортные механизмы SSL и TLS. Это позволяет обеспечить защиту от атак, основанных на прослушивании сетевого соединения: снифферских атак и атак типа man-in-the-middle при условии, что будут использоваться шифрующие средства и сертификат сервера проверен и ему доверяют. 

Запрос к API состоит из следующих элементов:

* Основного URL запроса: https://integrationapi.net/rest/ 
* Ресурса, например: /Sms/SendByTimeZone 
* Параметров GET или POST-запроса (в кодировке UTF-8)

Сервис создает идентификатор сессии в Системе после прохождения аутентификации данных,  передаваемых сервису в GET-запросе следующего формата:
	.. code-block::
	
	 https://integrationapi.net/rest/user/sessionid?login=<Логин>&password=<Пароль>
	
	
Параметры запроса представляют собой последовательность пар вида {имя параметра}={значение параметра}, разделенных символом амперсанда (&).   Content-Type для параметров запроса:   application/x-www-form-urlencoded   Это формат для кодирования пар «ключ-значение» с возможностью дублирования ключей. Каждая пара ключ-значение отделяется символом «&», ключ отделен от значения символом «=».  
При этом пробелы должны заменяться на знак «+», а затем, используя URL-кодирование, могут быть заменены все на буквенно-цифровые символы. 
Например:

.. code-block:: 
	
	 login: Jonathan  password: a + b == 13 %!  
	
	
Должно быть закодировано как:  

.. code-block:: 
	
        login=Jonathan+Do&password=a+%2B+b+%3D%3D+13%25%21  
	
	
Ниже приведен пример запроса:

.. code-block:: 
	
	 https://integrationapi.net/rest/user/sessionid?login=test&password=11111   
	
	
В Табл. 1 приводится полный список параметров GET-запроса. 
Табл. 1. Параметры GET-запроса для аутентификации

+--------------------+------------+-----------------------------------+
|      Параметр      | Тип данных |    Описание                       |
+====================+============+===================================+
|                        Обязательные параметры                       |
+--------------------+------------+-----------------------------------+
| Login              |   String   |  Логин,полученный при регистрации |
+--------------------+------------+-----------------------------------+
| Password           |   String   |  Пароль, соответствующий логину   |
+--------------------+------------+-----------------------------------+

В случае успешного прохождения аутентификации присланных данных, сервис отправки SMS сообщений пришлет ответ со следующими параметрами:

.. code-block:: python	

	HTTP status code: 200 ОК (статус «OperationComplete»);  
	Cache-Control: private (указание на то, что ответ разрешается сохранять только в закрытом кэше, т.е. только для этого Пользователя);  
	Connection: Keep-Alive (наименование заголовка соединения, которое не надо обновлять в кэше);  
Content-Type: application/json; charset=utf-8 (фактически значение вернется в виде строки в кавычках, а не в виде JSON) и кодировке utf-8); “Идентификатор сессии (GUID)”

Ниже приведен пример ответа:

.. code-block:: python

	HTTP/1.1 200 OK       
	Cache-Control: private       
	Connection: Keep-Alive      
	Content-Type: application/json; charset=utf-8       
	"Z5CYSZEKDL1DPICU37WEHQVOYKP0T1GSLHX1"  
	

В случае возникновения исключительной ситуации во время обработки запроса или ошибки аутентификации, Сервис возвращает Код ошибки (см. Табл. 10) в виде JSON следующего формата: 

.. code-block:: python

        {  
       
	Code: <Код ошибки>, Desc: <”Текст ошибки”>  
	
	}  
	

Например, при ошибке авторизации: 

.. code-block:: python

	 {  
	 
	 Code: 4,  
	 
	 Desc: "Invalid user login or password" 
	 
	 }  
	 
Полученный идентификатор сессии действителен в течение 120 минут.

Получение баланса авторизованного пользователя
----------------------------------------------

Протокол HTTP не имеет состояний. Это означает, что веб-сервер обрабатывает каждый HTTP-запрос со стороны внешнего приложения или сайта независимо, а сервер не сохраняет данные о значениях переменных, использованных в предшествующих запросах. Поэтому данные, полученные при авторизации пользователя, должны быть переданы и при осуществлении запроса получения баланса авторизованного пользователя. 
Сервис возвращает значение баланса авторизованного пользователя в соответствии со значениями параметров, передаваемых сервису в GET-запросе следующего формата: 
https://integrationapi.net/rest/User/Balance? SessionID=<Идентификатор сессии> 
Ниже приведен пример запроса: 
https://integrationapi.net/rest/User/Balance?SessionID=Z5CYSZEKDL1DPICU37W EHQVOYKP0T1GSLHX1  

В Табл. 2 приводится полный список параметров запроса. 
Табл. 2. Параметры GET-запроса баланса

+--------------------+------------+-------------------------------------------------------+
|      Параметр      | Тип данных |    Описание                                           |
+====================+============+=======================================================+
|                        Обязательные параметры                                           |
+--------------------+------------+-------------------------------------------------------+
| SessionID          |   String   |  Идентификатор сессии, полученный при аутентификации  |
+--------------------+------------+-------------------------------------------------------+

Сервис проверяет валидность полученного SessionID (проверяет актуальность и наличие в системе) и в случае успеха авторизует пользователя и в ответе присылает баланс пользователя со следующими параметрами: 
.. code-block:: 

	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	<Баланс пользователя>  
	
Ниже приведен пример ответа: 
.. code-block:: 

	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8  20015.3  
	
В случае возникновения исключительной ситуации во время обработки запроса или ошибки аутентификации, сервис возвращает код ошибки (см. Табл. 10) в виде JSON следующего формата: 
{  
Code: <Код ошибки>, Desc: <”Текст ошибки”>  
}  
Например, при ошибке аутентификации идентификатора сессии: 
{  
Code: 4,  
Desc: "SessionID expired"  
}  

Отправка SMS-сообщений
----------------------

Отправка SMS-сообщения на один номер без учета часового пояса получателя
------------------------------------------------------------------------
Сервис инициирует отправку SMS-сообщения в соответствии со значениями параметров, передаваемых сервису в POST-запросе следующего формата: 
 HTML-комментарий: HTML-комментарий</span> <a href=https://integrationapi.net/rest/Sms/Send?  
SessionID=<Идентификатор сессии>&  
SourceAddress=<Адрес отправителя>&  
DestinationAddress=<Номер получателя>&  
Data=<Текст сообщения>&  
Validity=<Время жизни сообщения>  
Ниже приведен пример запроса: 

.. code-block:: python

	https://integrationapi.net/rest/Sms/Send?SessionId=C619DF83829F4C3094CB54F4D62878786B5B&DestinationAddress=79161002030&SourceAddress=DEVINO&Data=test&Validity=0
	

В Табл. 3 приводится полный список параметров запроса. 
Табл. 3. Параметры запроса на отправку SMS-сообщения  

+--------------------+------------+--------------------------------------------------------------------------+
|      Параметр      | Тип данных |    Описание                                                              |
+====================+============+==========================================================================+
|                        Обязательные параметры                                                              |
+--------------------+------------+--------------------------------------------------------------------------+
| SessionID          |   String   |  Идентификатор сессии, полученный при аутентификации (36 символов)       |
+--------------------+------------+--------------------------------------------------------------------------+
| DestinationAddress |   String   |  Номер получателя сообщения, в международном  формате: код  страны       |
|                    |            |  и  код  сети плюс номер телефона. Пример:                               |
|                    |            |           79031234567;                                                   |
|                    |            |           +79031234567;                                                  |
+--------------------+------------+--------------------------------------------------------------------------+
| Data               |   String   | Текст сообщения, сообщение не должно быть длиннее 2000 символов          |
+--------------------+------------+--------------------------------------------------------------------------+
| SourceAddress      |   String   | Адрес отправителя сообщения. До 11 латинских символов или до 15 цифровых.|
+--------------------+------------+--------------------------------------------------------------------------+
|Необязательные параметры                                                                                    |
+--------------------+------------+--------------------------------------------------------------------------+
| SendDate           |  DateTime  | Дата и время отправки (пример 2011-01-28T16:00:00).                      |
|                    |            | Если в запросе передается этот параметр, то сообщение будет отправлено   |
|                    |            | только при наступлении полученных даты и времени без учета текущего      |
|                    |            | часового пояса получателя.                                               |
|                    |            | Сообщение отправится при наступлении переданного времени в часовом поясе:|
|                    |            | GMT+03:00.                                                               |
|                    |            | Если не требуется отложенная отправка, то передавать данный параметр     |
|                    |            | не нужно.                                                                |
+--------------------+------------+--------------------------------------------------------------------------+
| Validity           + Int        + Время жизни сообщения (в минутах)                                        |
+--------------------+------------+--------------------------------------------------------------------------+

Перед отправкой  SMS сервис проверяет запрос на: 

* Наличие обязательных параметров; 
* Валидность сессии Пользователя (аутентификацию и определение, не истекло ли его время жизни SessionID); 
* Достаточно ли баланса пользователя на отправку SMS. (Достаточность определяется на основании тарифа пользователя на отправку SMS для
мобильного оператора указанного в запросе номера); 
* Валидность указанного в запросе номера; 
* Валидность адреса отправителя; 
* Длину сообщения. 

Если все проверки пройдены успешно, то сервис отправит сообщение в SMS-центр и вернет идентификатор отправленного сообщения со
следующими параметрами: 
Формат ответа:

	.. code-block::

      	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	<Идентификатор сообщения>
	

Например:

	.. code-block:: 

	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	["GW0261BBD6B3"]
	

В случаях, когда длина отправляемого сообщения превышает 70 символов на кириллице или 160 символов на латинице, ответ от сервиса будет в виде последовательности идентификаторов сообщений, например: 
["SAR-GW01+79160000000-5f3b1972-2-1","SAR-GW01+79160000000-5f3b1972-2-2"]   
Если какая-нибудь проверка не проходит успешно, то сервис возвращает код ошибки (см. Табл. 10) в виде JSON следующего формата: 

	.. code-block:: 
	{  
	Code: <Код ошибки>, Desc: <”Текст ошибки”>  
	}
	
	
Например: 
	.. code-block:: 
	{  
	Code: 6,  
	Desc: "Invalid source address"  
	}  
	
	
Отправка SMS-сообщения на один номер с учетом часового пояса получателя:
------------------------------------------------------------------------
Сервис инициирует отправку SMS-сообщения в соответствии со значениями параметров, передаваемых сервису в POST-запросе следующего формата: 
https://integrationapi.net/rest/Sms/SendByTimeZone
SessionID=<Идентификатор сессии>&  
SourceAddress=<Адрес отправителя>&  
DestinationAddress=<Номер получателя>&  
Data=<Текст сообщения>&  
Validity=<Время жизни сообщения>&  
SendDate=<Дата отправки сообщения>  

Ниже приведен пример запроса:: 

https://integrationapi.net/rest/Sms/Send?SessionId=Z5CYSZEKDL1DPICU37WEHQV OYKP0T1GSLHX1&SourceAddress=TESTSMS&DestinationAddress=79001234567&Data=te stdata&Validity=10&destinationAddress= 79160000000& data=testdata&  sendDate=2011-01-28T16:00:00& validity=10  

В Табл. 4 приводится полный список параметров запроса. 
Табл. 4. Параметры POST-запроса на отправку SMS-сообщения c учетом часового пояса  

+--------------------+------------+--------------------------------------------------------------------------+
|      Параметр      | Тип данных |    Описание                                                              |
+====================+============+==========================================================================+
|                        Обязательные параметры                                                              |
+--------------------+------------+--------------------------------------------------------------------------+
| SessionID          |   String   |  Идентификатор сессии, полученный при аутентификации (36 символов)       |
+--------------------+------------+--------------------------------------------------------------------------+
| DestinationAddress |   String   |  Номер получателя сообщения, в международном  формате: код  страны       |
|                    |            |  и  код  сети плюс номер телефона. Пример:                               |
|                    |            |            79031234567;                                                  |
|                    |            |            +79031234567; +79031234567.                                   |
+--------------------+------------+--------------------------------------------------------------------------+
| Data               |   String   | Текст сообщения, сообщение не должно быть длиннее 2000 символов          |
+--------------------+------------+--------------------------------------------------------------------------+
| SourceAddress      |   String   | Адрес отправителя сообщения. До 11 латинских символов или до 15 цифровых.|
+--------------------+------------+--------------------------------------------------------------------------+
| SendDate           |  DateTime  | Дата и время отправки (пример 2011-01-28T16:00:00). Если в запросе       |
|                    |            | передается этот параметр, то сообщение будет отправлено только при       |
|                    |            | наступлении полученных даты и времени с учетом текущего часового пояса   |
|                    |            | получателя. Если не требуется отложенная отправка, то передавать данный  |
|                    |            | параметр не нужно.                                                       |
+--------------------+------------+--------------------------------------------------------------------------+
|Необязательные параметры                                                                                    |
+--------------------+------------+--------------------------------------------------------------------------+
| Validity           + Int        + Время жизни сообщения (в минутах)                                        |
+--------------------+------------+--------------------------------------------------------------------------+

Рис. 2. Отправка SMS через сервис отправки SMS с учетом часового пояса Перед отправкой SMS сервис проверяет запрос на: 
Наличие обязательных параметров; 
Валидность сессии пользователя (аутентификацию и определение, не истекло ли его время жизни SessionID); 
Достаточно ли баланса пользователя на отправку SMS. (Достаточность определяется на основании тарифа пользователя на отправку SMS для  мобильного оператора указанного в запросе номера); 
Валидность указанного в запросе номера; 
Валидность адреса отправителя; 
Длину сообщения. 
Если все проверки пройдены успешно, то сервис отправит сообщение в SMS-центр и вернет идентификатор отправленного сообщения со  следующими параметрами: 
Формат ответа: 

.. code-block:: python

	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	<Идентификатор сообщения>   
	

Например: 

.. code-block:: python

	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	["GW0261BBD6B3"]   
	

В случаях, когда длина отправляемого сообщения превышает 70 символов на кириллице или 160 символов на латинице, ответ от сервиса будет в виде последовательности идентификаторов сообщений: 
["SAR-GW01+79160000000-5f3b1972-2-1","SAR-GW01+79160000000-5f3b1972-2-2"]  
Например: 
HTTP/1.1 200 OK   
Cache-Control: private   
Connection: Keep-Alive  
Content-Type: application/json; charset=utf-8   
["SAR-GW01+79160000000-5f3b1972-2-1","SAR-GW01+79160000000-5f3b1972-2-2"]  

Если какая-нибудь проверка не проходит успешно, то сервис возвращает код ошибки (см. Табл. 10) в виде JSON следующего формата: 
{  
Code: <Код ошибки>, Desc: <”Текст ошибки”>  
}  
Например: 
{  
Code: 6,  
Desc: "Invalid source address"  
}  

Отправка SMS-сообщения на несколько номеров без учета часового пояса получателя:  
--------------------------------------------------------------------------------
Сервис инициирует отправку SMS-сообщения на несколько номеров в соответствии со значениями параметров, передаваемых сервису в POST-запросе следующего формата: 
https://integrationapi.net/rest/Sms/SendBulk?  
SessionID=<Идентификатор сессии>&  
SourceAddress=<Адрес отправителя>&  
DestinationAddresses=<Номер(а) получателя>&  
Data=<Текст сообщения>&  
Validity=<Время жизни сообщения>  
Ниже приведен пример запроса: 
https://integrationapi.net/rest/Sms/SendBulk?SessionID=Z5CYSZEKDL1DPICU37WEHQVOYKP0T1GSLHX1&SourceAd...
В Табл. 5 приводится полный список параметров запроса. 
Табл. 5. Параметры POST-запроса на отправку SMS-сообщения на несколько номеров  

+--------------------+------------+--------------------------------------------------------------------------+
|      Параметр      | Тип данных |    Описание                                                              |
+====================+============+==========================================================================+
|                        Обязательные параметры                                                              |
+--------------------+------------+--------------------------------------------------------------------------+
| SessionID          |   String   |  Идентификатор сессии, полученный при аутентификации (36 символов)       |
+--------------------+------------+--------------------------------------------------------------------------+
| DestinationAddress |   String   |  Номер получателя сообщения, в международном  формате: код  страны       |
|                    |            |  и  код  сети плюс номер телефона. Пример:                               |
|                    |            |            +79031234567;                                                 |
|                    |            |            +79031234567; +79031234567.                                   |
+--------------------+------------+--------------------------------------------------------------------------+
| Data               |   String   | Текст сообщения, сообщение не должно быть длиннее 2000 символов          |
+--------------------+------------+--------------------------------------------------------------------------+
| SourceAddress      |   String   | Адрес отправителя сообщения. До 11 латинских символов или до 15 цифровых.|
+--------------------+------------+--------------------------------------------------------------------------+
|Необязательные параметры                                                                                    |
+--------------------+------------+--------------------------------------------------------------------------+
| Validity           + Int        + Время жизни сообщения (в минутах)                                        |
+--------------------+------------+--------------------------------------------------------------------------+
| SendDate           |  DateTime  | Дата и время отправки (пример 2010-0601T19:14:00).                       |
|                    |            | Если не требуется отложенная отправка, то передавать                     |
|                    |            | данный параметр не нужно.                                                |
+--------------------+------------+--------------------------------------------------------------------------+

Перед отправкой  SMS сервис проверяет запрос на: 
Наличие обязательных параметров; 
Валидность сессии пользователя (аутентификацию и определение, не истекло ли его время жизни SessionID); 
Достаточно ли баланса пользователя на отправку SMS. (Достаточность определяется на основании тарифа пользователя на отправку SMS для мобильного оператора указанного в запросе номера); 
Валидность указанных в запросе номеров (если хоть один номер не проходит валидацию, то сообщения не отправляются);
Валидность адреса отправителя; 
Длину сообщения. 
Если все проверки пройдены успешно, то сервис отправит сообщение в SMS-центр и вернет идентификатор отправленного сообщения со следующими параметрами:

	
	Формат ответа:  
	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	<Идентификатор сообщения>   
	
	
Например: 

	
	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	["GW0261BBD6B3"]   
	
	
В случаях, когда длина отправляемого сообщения превышает 70 символов на кириллице или 160 символов на латинице,  ответ от сервиса будет в виде последовательно расположенных идентификаторов сегментов сообщения. Для нескольких сообщений идентификаторы сегментов будут расположены последовательно – сначала последовательно все сегменты одного сообщения, затем – все сегменты другого, например: 

	.. code-block:: 
	
	["SAR-GW01+79160000000-5f3b1972-2-1","SAR-GW01+79160000000-5f3b1972-2-2",  
	["SAR-GW01+79053500000-5d3b1972-2-1","SAR-GW01+79053500000-5d3b1972-2-2]   
	
	
	Например:  
	
	.. code-block:: 
	
	HTTP/1.1 200 OK   
	Cache-Control: private   
	Connection: Keep-Alive  
	Content-Type: application/json; charset=utf-8   
	["SAR-GW01+79160000000-5f3b1972-2-1","SAR-GW01+79160000000-5f3b1972-2-2",  
	["SAR-GW01+79053500000-5f3d1972-2-1","SAR-GW01+79053500000-5f3d1972-2-2]   
	

Если какая-нибудь проверка не проходит успешно, то сервис возвращает код ошибки (см. Табл. 10) в виде JSON следующего формата: 

	.. code-block:: 
	{  
	Code: <Код ошибки>, Desc: <”Текст ошибки”> 
	}  
	
	
	Например: 
	
	.. code-block:: 
	
	{  
	Code: 6,
	Desc: "Invalid source address"  
	}  
	
	
Внимание! Возможность отправки sms на несколько номеров с учетом часового пояса получателя пока недоступна. 
